{"ast":null,"code":"/*!\n * Module requirements\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst util = require('util');\nconst combinePathErrors = require('../helpers/error/combinePathErrors');\nclass SetOptionError extends MongooseError {\n  /**\n   * Mongoose.set Error\n   *\n   * @api private\n   * @inherits MongooseError\n   */\n  constructor() {\n    super('');\n    this.errors = {};\n  }\n\n  /**\n   * Console.log helper\n   */\n  toString() {\n    return combinePathErrors(this);\n  }\n\n  /**\n   * inspect helper\n   * @api private\n   */\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  /**\n  * add message\n  * @param {String} key\n  * @param {String|Error} error\n  * @api private\n  */\n  addError(key, error) {\n    if (error instanceof SetOptionError) {\n      const {\n        errors\n      } = error;\n      for (const optionKey of Object.keys(errors)) {\n        this.addError(optionKey, errors[optionKey]);\n      }\n      return;\n    }\n    this.errors[key] = error;\n    this.message = combinePathErrors(this);\n  }\n}\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  SetOptionError.prototype[util.inspect.custom] = SetOptionError.prototype.inspect;\n}\n\n/**\n * Helper for JSON.stringify\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\n * @api private\n */\nObject.defineProperty(SetOptionError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function () {\n    return Object.assign({}, this, {\n      name: this.name,\n      message: this.message\n    });\n  }\n});\nObject.defineProperty(SetOptionError.prototype, 'name', {\n  value: 'SetOptionError'\n});\nclass SetOptionInnerError extends MongooseError {\n  /**\n   * Error for the \"errors\" array in \"SetOptionError\" with consistent message\n   * @param {String} key\n   */\n  constructor(key) {\n    super(`\"${key}\" is not a valid option to set`);\n  }\n}\nSetOptionError.SetOptionInnerError = SetOptionInnerError;\n\n/*!\n * Module exports\n */\n\nmodule.exports = SetOptionError;","map":{"version":3,"names":["MongooseError","require","util","combinePathErrors","SetOptionError","constructor","errors","toString","inspect","Object","assign","Error","message","addError","key","error","optionKey","keys","custom","prototype","defineProperty","enumerable","writable","configurable","value","name","SetOptionInnerError","module","exports"],"sources":["C:/Users/Lenovo/node_modules/mongoose/lib/error/setOptionError.js"],"sourcesContent":["/*!\n * Module requirements\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst util = require('util');\nconst combinePathErrors = require('../helpers/error/combinePathErrors');\n\nclass SetOptionError extends MongooseError {\n  /**\n   * Mongoose.set Error\n   *\n   * @api private\n   * @inherits MongooseError\n   */\n  constructor() {\n    super('');\n\n    this.errors = {};\n  }\n\n  /**\n   * Console.log helper\n   */\n  toString() {\n    return combinePathErrors(this);\n  }\n\n  /**\n   * inspect helper\n   * @api private\n   */\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  /**\n  * add message\n  * @param {String} key\n  * @param {String|Error} error\n  * @api private\n  */\n  addError(key, error) {\n    if (error instanceof SetOptionError) {\n      const { errors } = error;\n      for (const optionKey of Object.keys(errors)) {\n        this.addError(optionKey, errors[optionKey]);\n      }\n\n      return;\n    }\n\n    this.errors[key] = error;\n    this.message = combinePathErrors(this);\n  }\n}\n\n\nif (util.inspect.custom) {\n  // Avoid Node deprecation warning DEP0079\n  SetOptionError.prototype[util.inspect.custom] = SetOptionError.prototype.inspect;\n}\n\n/**\n * Helper for JSON.stringify\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\n * @api private\n */\nObject.defineProperty(SetOptionError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function() {\n    return Object.assign({}, this, { name: this.name, message: this.message });\n  }\n});\n\n\nObject.defineProperty(SetOptionError.prototype, 'name', {\n  value: 'SetOptionError'\n});\n\nclass SetOptionInnerError extends MongooseError {\n  /**\n   * Error for the \"errors\" array in \"SetOptionError\" with consistent message\n   * @param {String} key\n   */\n  constructor(key) {\n    super(`\"${key}\" is not a valid option to set`);\n  }\n}\n\nSetOptionError.SetOptionInnerError = SetOptionInnerError;\n\n/*!\n * Module exports\n */\n\nmodule.exports = SetOptionError;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,iBAAiB,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAEvE,MAAMG,cAAc,SAASJ,aAAa,CAAC;EACzC;AACF;AACA;AACA;AACA;AACA;EACEK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,EAAE,CAAC;IAET,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;EAClB;;EAEA;AACF;AACA;EACEC,QAAQA,CAAA,EAAG;IACT,OAAOJ,iBAAiB,CAAC,IAAI,CAAC;EAChC;;EAEA;AACF;AACA;AACA;EACEK,OAAOA,CAAA,EAAG;IACR,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,IAAI,CAACC,OAAO,CAAC,EAAE,IAAI,CAAC;EACrD;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACnB,IAAIA,KAAK,YAAYX,cAAc,EAAE;MACnC,MAAM;QAAEE;MAAO,CAAC,GAAGS,KAAK;MACxB,KAAK,MAAMC,SAAS,IAAIP,MAAM,CAACQ,IAAI,CAACX,MAAM,CAAC,EAAE;QAC3C,IAAI,CAACO,QAAQ,CAACG,SAAS,EAAEV,MAAM,CAACU,SAAS,CAAC,CAAC;MAC7C;MAEA;IACF;IAEA,IAAI,CAACV,MAAM,CAACQ,GAAG,CAAC,GAAGC,KAAK;IACxB,IAAI,CAACH,OAAO,GAAGT,iBAAiB,CAAC,IAAI,CAAC;EACxC;AACF;AAGA,IAAID,IAAI,CAACM,OAAO,CAACU,MAAM,EAAE;EACvB;EACAd,cAAc,CAACe,SAAS,CAACjB,IAAI,CAACM,OAAO,CAACU,MAAM,CAAC,GAAGd,cAAc,CAACe,SAAS,CAACX,OAAO;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACW,cAAc,CAAChB,cAAc,CAACe,SAAS,EAAE,QAAQ,EAAE;EACxDE,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE,SAAAA,CAAA,EAAW;IAChB,OAAOf,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;MAAEe,IAAI,EAAE,IAAI,CAACA,IAAI;MAAEb,OAAO,EAAE,IAAI,CAACA;IAAQ,CAAC,CAAC;EAC5E;AACF,CAAC,CAAC;AAGFH,MAAM,CAACW,cAAc,CAAChB,cAAc,CAACe,SAAS,EAAE,MAAM,EAAE;EACtDK,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAME,mBAAmB,SAAS1B,aAAa,CAAC;EAC9C;AACF;AACA;AACA;EACEK,WAAWA,CAACS,GAAG,EAAE;IACf,KAAK,CAAE,IAAGA,GAAI,gCAA+B,CAAC;EAChD;AACF;AAEAV,cAAc,CAACsB,mBAAmB,GAAGA,mBAAmB;;AAExD;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGxB,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}