{"ast":null,"code":"'use strict';\n\nconst helpers = require('../../queryHelpers');\nmodule.exports = completeMany;\n\n/**\n * Given a model and an array of docs, hydrates all the docs to be instances\n * of the model. Used to initialize docs returned from the db from `find()`\n *\n * @param {Model} model\n * @param {Array} docs\n * @param {Object} fields the projection used, including `select` from schemas\n * @param {Object} userProvidedFields the user-specified projection\n * @param {Object} [opts]\n * @param {Array} [opts.populated]\n * @param {ClientSession} [opts.session]\n * @param {Function} callback\n * @api private\n */\n\nasync function completeMany(model, docs, fields, userProvidedFields, opts) {\n  return Promise.all(docs.map(doc => new Promise((resolve, reject) => {\n    const rawDoc = doc;\n    doc = helpers.createModel(model, doc, fields, userProvidedFields);\n    if (opts.session != null) {\n      doc.$session(opts.session);\n    }\n    doc.$init(rawDoc, opts, err => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(doc);\n    });\n  })));\n}","map":{"version":3,"names":["helpers","require","module","exports","completeMany","model","docs","fields","userProvidedFields","opts","Promise","all","map","doc","resolve","reject","rawDoc","createModel","session","$session","$init","err"],"sources":["C:/Users/Lenovo/node_modules/mongoose/lib/helpers/query/completeMany.js"],"sourcesContent":["'use strict';\n\nconst helpers = require('../../queryHelpers');\n\nmodule.exports = completeMany;\n\n/**\n * Given a model and an array of docs, hydrates all the docs to be instances\n * of the model. Used to initialize docs returned from the db from `find()`\n *\n * @param {Model} model\n * @param {Array} docs\n * @param {Object} fields the projection used, including `select` from schemas\n * @param {Object} userProvidedFields the user-specified projection\n * @param {Object} [opts]\n * @param {Array} [opts.populated]\n * @param {ClientSession} [opts.session]\n * @param {Function} callback\n * @api private\n */\n\nasync function completeMany(model, docs, fields, userProvidedFields, opts) {\n  return Promise.all(docs.map(doc => new Promise((resolve, reject) => {\n    const rawDoc = doc;\n    doc = helpers.createModel(model, doc, fields, userProvidedFields);\n    if (opts.session != null) {\n      doc.$session(opts.session);\n    }\n    doc.$init(rawDoc, opts, (err) => {\n      if (err != null) {\n        return reject(err);\n      }\n      resolve(doc);\n    });\n  })));\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE7CC,MAAM,CAACC,OAAO,GAAGC,YAAY;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,YAAYA,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,kBAAkB,EAAEC,IAAI,EAAE;EACzE,OAAOC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAI,IAAIH,OAAO,CAAC,CAACI,OAAO,EAAEC,MAAM,KAAK;IAClE,MAAMC,MAAM,GAAGH,GAAG;IAClBA,GAAG,GAAGb,OAAO,CAACiB,WAAW,CAACZ,KAAK,EAAEQ,GAAG,EAAEN,MAAM,EAAEC,kBAAkB,CAAC;IACjE,IAAIC,IAAI,CAACS,OAAO,IAAI,IAAI,EAAE;MACxBL,GAAG,CAACM,QAAQ,CAACV,IAAI,CAACS,OAAO,CAAC;IAC5B;IACAL,GAAG,CAACO,KAAK,CAACJ,MAAM,EAAEP,IAAI,EAAGY,GAAG,IAAK;MAC/B,IAAIA,GAAG,IAAI,IAAI,EAAE;QACf,OAAON,MAAM,CAACM,GAAG,CAAC;MACpB;MACAP,OAAO,CAACD,GAAG,CAAC;IACd,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"script","externalDependencies":[]}